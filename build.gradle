// allows 'gradle dependencyUpdates' to discover outdated dependencies
plugins {
    id 'com.github.ben-manes.versions' version '0.13.0'
}
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'checkstyle'
//apply plugin: 'findbugs'
//apply plugin: 'pmd'
configurations { javancss }

dependencies { javancss "javancss:javancss:29.50" }

task javancss(group: 'verification', description: 'Runs javaNCSS tests and generates a report afterwards') << {
    def reportDir = file("$reporting.baseDir/javancss")
    reportDir.mkdirs()

    ant {
        taskdef(name:'javancss', classname:'javancss.JavancssAntTask', classpath: configurations.javancss.asPath)
        javancss(srcdir: 'src/main/java', generateReport:'true', format: 'xml', outputfile: "$reportDir/main.xml")
    }
}

checkstyle {
    toolVersion = "7.1"
    sourceSets = [project.sourceSets.main]
    ignoreFailures = true
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:all"
javadoc.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.code.gson:gson:2.8'
    compile 'com.squareup.okhttp3:okhttp:3.4.2'
    compile 'io.reactivex:rxjava:1.2.2'
    compile 'com.google.guava:guava:20.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile "org.mockito:mockito-core:2.2.16"
}

task 'create-dirs' << {
    sourceSets.all { set ->
        set.allSource.srcDirs.each { it.mkdirs() }
    }
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

mainClassName = 'de.larseckart.spielplatz.Main';